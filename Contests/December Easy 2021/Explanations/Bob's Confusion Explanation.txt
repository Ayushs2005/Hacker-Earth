It is very similar to this problem - https://atcoder.jp/contests/abc088/tasks/abc088_c 

Notice that if (A1, A2, A3, B1, B2, B3) is a solution to this problem, even 

(A1 + x, A2 + x, A3 + x, B1 - x, B2 - x, B3 - x) is also a solution to this problem. 

If one solution exists, it implies there are an infinite number of solutions. 

So, we can choose x appropriately by setting A1 = 0 

https://mathprogrammer.quora.com/AtCoder-ABC088_C-Takahashis-Information?share=50561b47&srid=F7Hz

-----

void solve()
{
	const int N = 3;
	vector <vector <int> > grid(N + 1, vector <int> (N + 1));
	for(int i = 1; i <= N; i++)
	{
		for(int j = 1; j <= N; j++)
		{
			cin >> grid[i][j]; 
		}
	}

	vector <long long> A(N + 1), B(N + 1);
	A[1] = 0; 
	B[1] = grid[1][1] - A[1]; 
	A[2] = grid[2][1] - B[1];
	B[2] = grid[2][2] - A[2]; 
	A[3] = grid[3][2] - B[2];
	B[3] = grid[3][3] - A[3];
	
	int possible = true;
	for(int i = 1; i <= N; i++)
	{
		for(int j = 1; j <= N; j++)
		{
			if(A[i] + B[j] != grid[i][j])
			{
				possible = false;
			}
		}
	}

	cout << (possible ? "YES" : "NO") << "\n";
}
